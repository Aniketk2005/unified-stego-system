{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT CS\\\\unified-stego-system\\\\frontend\\\\src\\\\components\\\\Encode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Encode() {\n  _s();\n  // All your state variables remain the same\n  const [inputType, setInputType] = useState(\"text\");\n  const [text, setText] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null);\n  const [coverImageFile, setCoverImageFile] = useState(null);\n  const [outputMedia, setOutputMedia] = useState(\"image\");\n  const [medium, setMedium] = useState(\"WhatsApp\");\n  const [confidentiality, setConfidentiality] = useState(\"casual\");\n  const [allowAI, setAllowAI] = useState(false); // Defaulting AI to off for simplicity\n  const [manualEncoding, setManualEncoding] = useState(\"lsb_image\");\n  const [response, setResponse] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [encodedImage, setEncodedImage] = useState(null);\n  const [encodeProgress, setEncodeProgress] = useState(0);\n  const [encodePassword, setEncodePassword] = useState(\"\");\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\n  const [decodedMessage, setDecodedMessage] = useState(\"\");\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null);\n  const [decodingLoading, setDecodingLoading] = useState(false);\n  const [decodeResponse, setDecodeResponse] = useState(\"\");\n  const [decodePassword, setDecodePassword] = useState(\"\");\n\n  // This polling interval will be used to check the status\n  let pollingInterval;\n  const pollJobStatus = async jobId => {\n    pollingInterval = setInterval(async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/status/${jobId}`);\n        const data = await res.json();\n        if (data.status === 'processing') {\n          setEncodeProgress(data.progress);\n          setResponse(\"Encoding in progress...\");\n        } else if (data.status === 'complete') {\n          clearInterval(pollingInterval);\n          setLoading(false);\n          setResponse(\"Encoding successful!\");\n          setEncodeProgress(100);\n          // THIS IS THE KEY: Set the image URL to display it\n          setEncodedImage(data.encoded_image_url);\n        } else if (data.status === 'error') {\n          clearInterval(pollingInterval);\n          setLoading(false);\n          setResponse(`Error: ${data.message}`);\n          setEncodeProgress(0);\n        }\n      } catch (err) {\n        clearInterval(pollingInterval);\n        setLoading(false);\n        setResponse(\"Error: Could not poll job status.\");\n        console.error(\"Polling error:\", err);\n      }\n    }, 2000); // Check every 2 seconds\n  };\n  const handleEncode = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse(\"Uploading files...\");\n    setEncodedImage(null);\n    setDecodedMessage(\"\");\n    setEncodeProgress(0);\n    let formData = new FormData();\n    formData.append(\"text\", text);\n    formData.append(\"coverImage\", coverImageFile);\n    if (encodePassword) {\n      formData.append(\"password\", encodePassword);\n    }\n    try {\n      // Step 1: Send the request to /encode\n      const res = await fetch(\"http://localhost:5000/encode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok && data.job_id) {\n        // Step 2: If we get a job_id, start polling for the status\n        setResponse(\"Processing... Please wait.\");\n        pollJobStatus(data.job_id);\n      } else {\n        setResponse(`Error: ${data.message || 'Failed to start encoding job.'}`);\n        setLoading(false);\n      }\n    } catch (err) {\n      console.error(\"Error during encode submission:\", err);\n      setResponse(\"Error connecting to server to start encoding.\");\n      setLoading(false);\n    }\n  };\n  const handleDecode = async e => {\n    e.preventDefault();\n    setDecodingLoading(true);\n    setDecodedMessage(\"\");\n    setDecodedImageUrl(null);\n    setDecodeResponse(\"\");\n    if (!decodeImageFile) {\n      setDecodeResponse(\"Please select an image to decode.\");\n      setDecodingLoading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", decodeImageFile);\n    if (decodePassword) formData.append(\"password\", decodePassword);\n    try {\n      const res = await fetch(\"http://localhost:5000/decode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setDecodedMessage(data.decoded_content);\n        setDecodeResponse(\"Decoding successful!\");\n      } else {\n        setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\n      }\n    } catch (err) {\n      console.error(\"Error during decoding:\", err);\n      setDecodeResponse(\"Error connecting to server for decoding.\");\n    } finally {\n      setDecodingLoading(false);\n    }\n  };\n\n  // Your JSX remains largely the same, just remove the simulated progress effects\n  // The rest of your component (return statement with JSX) goes here...\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      padding: \"1rem\",\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gap: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Encode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEncode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter your secret message\",\n          rows: 4,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Cover Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg, image/jpg\",\n            onChange: e => setCoverImageFile(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Encryption Password (Optional):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: encodePassword,\n            onChange: e => setEncodePassword(e.target.value),\n            placeholder: \"Leave blank for no encryption\",\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"0.5rem\"\n          },\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Encode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"progress-bar\",\n              style: {\n                width: `${encodeProgress}%`\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-text\",\n            children: [encodeProgress, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\"\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 22\n      }, this), encodedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Encoded Image Ready:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: encodedImage,\n          alt: \"Encoded\",\n          style: {\n            maxWidth: \"100%\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: encodedImage,\n          download: true,\n          style: {\n            display: \"inline-block\",\n            marginTop: \"1rem\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"5px\",\n            border: \"1px solid #007bff\",\n            backgroundColor: \"transparent\",\n            color: \"#007bff\",\n            textDecoration: \"none\"\n          },\n          children: \"Download Encoded Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Decode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDecode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Encoded Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg, image/jpg\",\n            onChange: e => setDecodeImageFile(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Decryption Password (If encrypted):\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: decodePassword,\n            onChange: e => setDecodePassword(e.target.value),\n            placeholder: \"Enter password if encrypted\",\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#28a745\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\"\n          },\n          disabled: decodingLoading,\n          children: decodingLoading ? \"Decoding...\" : \"Decode Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), decodeResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\"\n        },\n        children: decodeResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 28\n      }, this), decodedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"1rem\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"8px\",\n          backgroundColor: \"#e6f7ff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decoded Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            wordBreak: \"break-all\"\n          },\n          children: decodedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Encode, \"gZzANsOP/jky/4fHkLweZm/KGLQ=\");\n_c = Encode;\nexport default Encode;\nvar _c;\n$RefreshReg$(_c, \"Encode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Encode","_s","inputType","setInputType","text","setText","imageFile","setImageFile","coverImageFile","setCoverImageFile","outputMedia","setOutputMedia","medium","setMedium","confidentiality","setConfidentiality","allowAI","setAllowAI","manualEncoding","setManualEncoding","response","setResponse","loading","setLoading","encodedImage","setEncodedImage","encodeProgress","setEncodeProgress","encodePassword","setEncodePassword","decodeImageFile","setDecodeImageFile","decodedMessage","setDecodedMessage","decodedImageUrl","setDecodedImageUrl","decodingLoading","setDecodingLoading","decodeResponse","setDecodeResponse","decodePassword","setDecodePassword","pollingInterval","pollJobStatus","jobId","setInterval","res","fetch","data","json","status","progress","clearInterval","encoded_image_url","message","err","console","error","handleEncode","e","preventDefault","formData","FormData","append","method","body","ok","job_id","handleDecode","decoded_content","style","maxWidth","margin","padding","display","gridTemplateColumns","gap","children","border","borderRadius","boxShadow","backgroundColor","marginBottom","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","flexDirection","value","onChange","target","placeholder","rows","required","width","type","accept","files","marginTop","fontSize","cursor","alignItems","justifyContent","disabled","className","src","alt","href","download","textDecoration","fontWeight","wordBreak","_c","$RefreshReg$"],"sources":["D:/PROJECT CS/unified-stego-system/frontend/src/components/Encode.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Encode() {\r\n  // All your state variables remain the same\r\n  const [inputType, setInputType] = useState(\"text\");\r\n  const [text, setText] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(null);\r\n  const [coverImageFile, setCoverImageFile] = useState(null);\r\n  const [outputMedia, setOutputMedia] = useState(\"image\");\r\n  const [medium, setMedium] = useState(\"WhatsApp\");\r\n  const [confidentiality, setConfidentiality] = useState(\"casual\");\r\n  const [allowAI, setAllowAI] = useState(false); // Defaulting AI to off for simplicity\r\n  const [manualEncoding, setManualEncoding] = useState(\"lsb_image\");\r\n  const [response, setResponse] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [encodedImage, setEncodedImage] = useState(null);\r\n  const [encodeProgress, setEncodeProgress] = useState(0);\r\n  const [encodePassword, setEncodePassword] = useState(\"\");\r\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\r\n  const [decodedMessage, setDecodedMessage] = useState(\"\");\r\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null);\r\n  const [decodingLoading, setDecodingLoading] = useState(false);\r\n  const [decodeResponse, setDecodeResponse] = useState(\"\");\r\n  const [decodePassword, setDecodePassword] = useState(\"\");\r\n\r\n  // This polling interval will be used to check the status\r\n  let pollingInterval;\r\n\r\n  const pollJobStatus = async (jobId) => {\r\n    pollingInterval = setInterval(async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/status/${jobId}`);\r\n        const data = await res.json();\r\n\r\n        if (data.status === 'processing') {\r\n          setEncodeProgress(data.progress);\r\n          setResponse(\"Encoding in progress...\");\r\n        } else if (data.status === 'complete') {\r\n          clearInterval(pollingInterval);\r\n          setLoading(false);\r\n          setResponse(\"Encoding successful!\");\r\n          setEncodeProgress(100);\r\n          // THIS IS THE KEY: Set the image URL to display it\r\n          setEncodedImage(data.encoded_image_url);\r\n        } else if (data.status === 'error') {\r\n          clearInterval(pollingInterval);\r\n          setLoading(false);\r\n          setResponse(`Error: ${data.message}`);\r\n          setEncodeProgress(0);\r\n        }\r\n      } catch (err) {\r\n        clearInterval(pollingInterval);\r\n        setLoading(false);\r\n        setResponse(\"Error: Could not poll job status.\");\r\n        console.error(\"Polling error:\", err);\r\n      }\r\n    }, 2000); // Check every 2 seconds\r\n  };\r\n\r\n  const handleEncode = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setResponse(\"Uploading files...\");\r\n    setEncodedImage(null);\r\n    setDecodedMessage(\"\");\r\n    setEncodeProgress(0);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"text\", text);\r\n    formData.append(\"coverImage\", coverImageFile);\r\n    if (encodePassword) {\r\n      formData.append(\"password\", encodePassword);\r\n    }\r\n\r\n    try {\r\n      // Step 1: Send the request to /encode\r\n      const res = await fetch(\"http://localhost:5000/encode\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (res.ok && data.job_id) {\r\n        // Step 2: If we get a job_id, start polling for the status\r\n        setResponse(\"Processing... Please wait.\");\r\n        pollJobStatus(data.job_id);\r\n      } else {\r\n        setResponse(`Error: ${data.message || 'Failed to start encoding job.'}`);\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during encode submission:\", err);\r\n      setResponse(\"Error connecting to server to start encoding.\");\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDecode = async (e) => {\r\n    e.preventDefault();\r\n    setDecodingLoading(true);\r\n    setDecodedMessage(\"\");\r\n    setDecodedImageUrl(null);\r\n    setDecodeResponse(\"\");\r\n\r\n    if (!decodeImageFile) {\r\n      setDecodeResponse(\"Please select an image to decode.\");\r\n      setDecodingLoading(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", decodeImageFile);\r\n    if (decodePassword) formData.append(\"password\", decodePassword);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/decode\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setDecodedMessage(data.decoded_content);\r\n        setDecodeResponse(\"Decoding successful!\");\r\n      } else {\r\n        setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during decoding:\", err);\r\n      setDecodeResponse(\"Error connecting to server for decoding.\");\r\n    } finally {\r\n      setDecodingLoading(false);\r\n    }\r\n  };\r\n\r\n  // Your JSX remains largely the same, just remove the simulated progress effects\r\n  // The rest of your component (return statement with JSX) goes here...\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"auto\", padding: \"1rem\", display: \"grid\", gridTemplateColumns: \"1fr\", gap: \"2rem\" }}>\r\n      {/* Encoding Section */}\r\n      <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n        <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Encode Your Message</h2>\r\n        <form onSubmit={handleEncode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          {/* We'll simplify the UI to focus on the working parts */}\r\n          <textarea\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"Enter your secret message\"\r\n            rows={4}\r\n            required\r\n            style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n          />\r\n          <label>\r\n            Upload Cover Image:\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg, image/jpg\"\r\n              onChange={(e) => setCoverImageFile(e.target.files[0])}\r\n              required\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Encryption Password (Optional):\r\n            <input\r\n              type=\"password\"\r\n              value={encodePassword}\r\n              onChange={(e) => setEncodePassword(e.target.value)}\r\n              placeholder=\"Leave blank for no encryption\"\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              marginTop: \"1rem\", padding: \"0.8rem 1.5rem\", borderRadius: \"5px\", border: \"none\",\r\n              backgroundColor: \"#007bff\", color: \"white\", fontSize: \"1rem\", cursor: \"pointer\",\r\n              display: \"flex\", alignItems: \"center\", justifyContent: \"center\", gap: \"0.5rem\"\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Processing...\" : \"Encode\"}\r\n          </button>\r\n          {loading && (\r\n            <div>\r\n              <div className=\"progress-container\">\r\n                <div className=\"progress-bar\" style={{ width: `${encodeProgress}%` }}></div>\r\n              </div>\r\n              <div className=\"progress-text\">{encodeProgress}%</div>\r\n            </div>\r\n          )}\r\n        </form>\r\n\r\n        {response && <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\" }}>{response}</p>}\r\n\r\n        {encodedImage && (\r\n          <div style={{ marginTop: \"1rem\", textAlign: \"center\" }}>\r\n            <h3>Encoded Image Ready:</h3>\r\n            <img src={encodedImage} alt=\"Encoded\" style={{ maxWidth: \"100%\", border: \"1px solid #ccc\", borderRadius: \"8px\" }}/>\r\n            <br />\r\n            <a href={encodedImage} download style={{\r\n              display: \"inline-block\", marginTop: \"1rem\", padding: \"0.5rem 1rem\", borderRadius: \"5px\",\r\n              border: \"1px solid #007bff\", backgroundColor: \"transparent\", color: \"#007bff\", textDecoration: \"none\"\r\n            }}>\r\n              Download Encoded Image\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Decoding Section */}\r\n      <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n        <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Decode Your Message</h2>\r\n        <form onSubmit={handleDecode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          <label>\r\n            Upload Encoded Image:\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg, image/jpg\"\r\n              onChange={(e) => setDecodeImageFile(e.target.files[0])}\r\n              required\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n          <label>\r\n            Decryption Password (If encrypted):\r\n            <input\r\n              type=\"password\"\r\n              value={decodePassword}\r\n              onChange={(e) => setDecodePassword(e.target.value)}\r\n              placeholder=\"Enter password if encrypted\"\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              marginTop: \"1rem\", padding: \"0.8rem 1.5rem\", borderRadius: \"5px\", border: \"none\",\r\n              backgroundColor: \"#28a745\", color: \"white\", fontSize: \"1rem\", cursor: \"pointer\"\r\n            }}\r\n            disabled={decodingLoading}\r\n          >\r\n            {decodingLoading ? \"Decoding...\" : \"Decode Image\"}\r\n          </button>\r\n        </form>\r\n\r\n        {decodeResponse && <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\" }}>{decodeResponse}</p>}\r\n\r\n        {decodedMessage && (\r\n          <div style={{ marginTop: \"1rem\", padding: \"1rem\", border: \"1px solid #007bff\", borderRadius: \"8px\", backgroundColor: \"#e6f7ff\" }}>\r\n            <h3>Decoded Message:</h3>\r\n            <p style={{ fontWeight: \"bold\", wordBreak: \"break-all\" }}>{decodedMessage}</p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Encode;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}