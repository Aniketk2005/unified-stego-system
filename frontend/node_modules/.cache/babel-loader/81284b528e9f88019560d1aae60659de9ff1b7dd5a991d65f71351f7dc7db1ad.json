{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT CS\\\\unified-stego-system\\\\frontend\\\\src\\\\components\\\\Encode.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Encode() {\n  _s();\n  // Encoding states\n  const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"image\" for encoding\n  const [text, setText] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null); // For secret image input type (for encoding)\n  const [coverImageFile, setCoverImageFile] = useState(null); // State for uploaded cover image\n  const [outputMedia, setOutputMedia] = useState(\"image\"); // State for desired output media (image, pdf, qr)\n  const [medium, setMedium] = useState(\"WhatsApp\");\n  const [confidentiality, setConfidentiality] = useState(\"casual\");\n  const [allowAI, setAllowAI] = useState(true);\n  const [aiDecision, setAIDecision] = useState(null);\n  const [confirmed, setConfirmed] = useState(false);\n  const [manualEncoding, setManualEncoding] = useState(\"lsb_image\"); // Default to LSB image for manual\n  const [response, setResponse] = useState(\"\"); // General response message for encoding\n  const [loading, setLoading] = useState(false); // Loading state for encoding\n  const [encodedImage, setEncodedImage] = useState(null); // Stores the URL of the *encoded output* image\n  const [encodeProgress, setEncodeProgress] = useState(0); // NEW: State for encoding progress percentage\n\n  // Decoding states\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\n  const [decodedMessage, setDecodedMessage] = useState(\"\"); // For decoded text content\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null); // For decoded image URL\n  const [decodingLoading, setDecodingLoading] = useState(false);\n  const [decodeResponse, setDecodeResponse] = useState(\"\");\n  const [decodeProgress, setDecodeProgress] = useState(0); // NEW: State for decoding progress percentage\n\n  // NEW: Effect to simulate encoding progress\n  useEffect(() => {\n    let interval;\n    if (loading) {\n      setEncodeProgress(0); // Reset progress when loading starts\n      interval = setInterval(() => {\n        setEncodeProgress(oldProgress => {\n          if (oldProgress < 95) {\n            // Stop just before 100% to wait for actual completion\n            return oldProgress + 5; // Increment by 5%\n          }\n          return oldProgress;\n        });\n      }, 1000); // Update every 1 second\n    } else {\n      clearInterval(interval);\n      setEncodeProgress(0); // Reset when loading stops\n    }\n    return () => clearInterval(interval); // Cleanup interval on component unmount or loading change\n  }, [loading]);\n\n  // NEW: Effect to simulate decoding progress\n  useEffect(() => {\n    let interval;\n    if (decodingLoading) {\n      setDecodeProgress(0); // Reset progress when decoding starts\n      interval = setInterval(() => {\n        setDecodeProgress(oldProgress => {\n          if (oldProgress < 95) {\n            // Stop just before 100%\n            return oldProgress + 5;\n          }\n          return oldProgress;\n        });\n      }, 1000); // Update every 1 second\n    } else {\n      clearInterval(interval);\n      setDecodeProgress(0); // Reset when decoding stops\n    }\n    return () => clearInterval(interval);\n  }, [decodingLoading]);\n\n  // --- Encoding Functions ---\n\n  const getAIDecision = async () => {\n    setLoading(true);\n    setResponse(\"\");\n    setEncodedImage(null);\n    setDecodedMessage(\"\");\n    setDecodedImageUrl(null);\n    let formData = new FormData();\n    formData.append(\"inputType\", inputType);\n    formData.append(\"medium\", medium);\n    formData.append(\"confidentiality\", confidentiality);\n    formData.append(\"allowAI\", allowAI);\n    formData.append(\"outputMedia\", outputMedia);\n    if (inputType === \"image\" && imageFile) formData.append(\"image\", imageFile);\n    if (coverImageFile) formData.append(\"coverImage\", coverImageFile);\n    try {\n      const res = await fetch(\"http://localhost:5000/decide_encoding\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setAIDecision(data.aiDecision);\n        setResponse(data.message);\n      } else {\n        setResponse(`Error: ${data.message || 'Failed to get AI decision.'}`);\n      }\n    } catch (err) {\n      console.error(\"Error fetching AI decision:\", err);\n      setResponse(\"Error connecting to server for AI decision.\");\n    } finally {\n      setLoading(false);\n      setEncodeProgress(100); // Set to 100% on completion/error\n    }\n  };\n  const handleEncode = async e => {\n    e.preventDefault();\n    if (allowAI && aiDecision === null) {\n      await getAIDecision();\n      return;\n    }\n    if (allowAI && aiDecision !== null && !confirmed) {\n      setConfirmed(true);\n    }\n    setLoading(true);\n    setResponse(\"\");\n    setEncodedImage(null);\n    setDecodedMessage(\"\");\n    setDecodedImageUrl(null);\n    setEncodeProgress(0); // Ensure progress starts from 0\n\n    let formData = new FormData();\n    formData.append(\"inputType\", inputType);\n    if (inputType === \"text\") {\n      if (!text) {\n        setResponse(\"Please enter text to encode.\");\n        setLoading(false);\n        return;\n      }\n      formData.append(\"text\", text);\n    } else if (inputType === \"image\") {\n      if (!imageFile) {\n        setResponse(\"Please select a secret image file to encode.\");\n        setLoading(false);\n        return;\n      }\n      formData.append(\"image\", imageFile);\n    }\n    if (!coverImageFile) {\n      setResponse(\"Please select a cover image file.\");\n      setLoading(false);\n      return;\n    }\n    formData.append(\"coverImage\", coverImageFile);\n    formData.append(\"medium\", medium);\n    formData.append(\"confidentiality\", confidentiality);\n    formData.append(\"allowAI\", allowAI);\n    formData.append(\"outputMedia\", outputMedia);\n    formData.append(\"encoding\", allowAI && confirmed ? aiDecision : manualEncoding);\n    try {\n      const res = await fetch(\"http://localhost:5000/encode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(data.message);\n        if (data.encoded_image_url) {\n          setEncodedImage(data.encoded_image_url);\n        } else {\n          setEncodedImage(null);\n        }\n      } else {\n        setResponse(`Error: ${data.message || 'Encoding failed.'}`);\n        setEncodedImage(null);\n      }\n    } catch (err) {\n      console.error(\"Error during encoding:\", err);\n      setResponse(\"Error connecting to server for encoding.\");\n      setEncodedImage(null);\n    } finally {\n      setLoading(false);\n      setConfirmed(false);\n      setAIDecision(null);\n      setEncodeProgress(100); // Set to 100% on completion/error\n    }\n  };\n  const toggleAllowAI = () => {\n    setAllowAI(!allowAI);\n    setAIDecision(null);\n    setConfirmed(false);\n  };\n\n  // --- Decoding Functions ---\n  const handleDecode = async e => {\n    e.preventDefault();\n    setDecodingLoading(true);\n    setDecodedMessage(\"\");\n    setDecodedImageUrl(null);\n    setDecodeResponse(\"\");\n    setDecodeProgress(0); // Ensure progress starts from 0\n\n    if (!decodeImageFile) {\n      setDecodeResponse(\"Please select an image to decode.\");\n      setDecodingLoading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", decodeImageFile);\n    try {\n      const res = await fetch(\"http://localhost:5000/decode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        if (data.decoded_type === 'text') {\n          setDecodedMessage(data.decoded_content);\n          setDecodedImageUrl(null);\n          setDecodeResponse(data.message);\n        } else if (data.decoded_type === 'image') {\n          setDecodedMessage(null);\n          setDecodedImageUrl(data.decoded_content_url);\n          setDecodeResponse(data.message);\n        }\n      } else {\n        setDecodedMessage(\"\");\n        setDecodedImageUrl(null);\n        setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\n      }\n    } catch (err) {\n      console.error(\"Error during decoding:\", err);\n      setDecodedMessage(\"\");\n      setDecodedImageUrl(null);\n      setDecodeResponse(\"Error connecting to server for decoding.\");\n    } finally {\n      setDecodingLoading(false);\n      setDecodeProgress(100); // Set to 100% on completion/error\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      padding: \"1rem\",\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gap: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Encode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEncode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Input Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: inputType,\n            onChange: e => {\n              setInputType(e.target.value);\n              setText(\"\");\n              setImageFile(null);\n            },\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), inputType === \"text\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter your secret message\",\n          rows: 4,\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 13\n        }, this), inputType === \"image\" && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Secret Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setImageFile(e.target.files[0]),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Cover Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg, image/jpg\",\n            onChange: e => setCoverImageFile(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Output Media:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: outputMedia,\n            onChange: e => setOutputMedia(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pdf\",\n              children: \"PDF (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"qr\",\n              children: \"QR Code (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Medium:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: medium,\n            onChange: e => setMedium(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"WhatsApp\",\n              children: \"WhatsApp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Telegram\",\n              children: \"Telegram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confidentiality:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: confidentiality,\n            onChange: e => setConfidentiality(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"casual\",\n              children: \"Casual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"professional\",\n              children: \"Professional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: allowAI,\n            onChange: toggleAllowAI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this), \"Allow AI to decide encoding method\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), !allowAI && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Encoding Manually:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: manualEncoding,\n            onChange: e => setManualEncoding(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lsb_image\",\n              children: \"LSB Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"dct_image\",\n              children: \"DCT Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pdf_meta\",\n              children: \"PDF Metadata (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"qr_stego\",\n              children: \"QR Code Stego (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), allowAI && aiDecision && !confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"1rem\",\n            backgroundColor: \"#f0f0f0\",\n            padding: \"1rem\",\n            borderRadius: \"8px\",\n            border: \"1px solid #ddd\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"0 0 1rem 0\"\n            },\n            children: [\"AI suggests encoding using: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: \"#007bff\"\n              },\n              children: aiDecision\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setConfirmed(true),\n            style: {\n              marginRight: \"1rem\",\n              padding: \"0.5rem 1rem\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              backgroundColor: \"#28a745\",\n              color: \"white\",\n              cursor: \"pointer\"\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setAIDecision(null);\n              setConfirmed(false);\n            },\n            style: {\n              padding: \"0.5rem 1rem\",\n              borderRadius: \"5px\",\n              border: \"1px solid #dc3545\",\n              backgroundColor: \"transparent\",\n              color: \"#dc3545\",\n              cursor: \"pointer\"\n            },\n            children: \"Reject / Choose manually\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s ease\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"0.5rem\"\n          },\n          disabled: loading,\n          children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Processing...\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true) : \"Encode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), loading &&\n        /*#__PURE__*/\n        // NEW: Display progress bar when loading\n        _jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${encodeProgress}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 15\n        }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [encodeProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 23\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 11\n      }, this), encodedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Encoded Image Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: encodedImage,\n          alt: \"Encoded\",\n          style: {\n            maxWidth: \"100%\",\n            height: \"auto\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            marginTop: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: encodedImage,\n          download: \"encoded.png\",\n          style: {\n            display: \"inline-block\",\n            marginTop: \"1rem\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"5px\",\n            border: \"1px solid #007bff\",\n            backgroundColor: \"transparent\",\n            color: \"#007bff\",\n            textDecoration: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Download Encoded Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 463,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 455,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Decode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDecode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Encoded Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg, image/jpg\",\n            onChange: e => setDecodeImageFile(e.target.files[0]),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#28a745\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s ease\",\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n            gap: \"0.5rem\"\n          },\n          disabled: decodingLoading,\n          children: decodingLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"Decoding...\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 520,\n              columnNumber: 21\n            }, this), \" \"]\n          }, void 0, true) : \"Decode Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 11\n        }, this), decodingLoading &&\n        /*#__PURE__*/\n        // NEW: Display progress bar when decoding\n        _jsxDEV(\"div\", {\n          className: \"progress-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-bar\",\n            style: {\n              width: `${decodeProgress}%`,\n              backgroundColor: '#28a745'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 19\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 525,\n          columnNumber: 15\n        }, this), decodingLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-text\",\n          children: [decodeProgress, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 31\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 9\n      }, this), decodeResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: decodeResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 11\n      }, this), decodedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"1rem\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"8px\",\n          backgroundColor: \"#e6f7ff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decoded Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 540,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            wordBreak: \"break-all\"\n          },\n          children: decodedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 539,\n        columnNumber: 11\n      }, this), decodedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decoded Secret Image:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: decodedImageUrl,\n          alt: \"Decoded Secret\",\n          style: {\n            maxWidth: \"100%\",\n            height: \"auto\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            marginTop: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: decodedImageUrl,\n          download: \"decoded_secret_image.png\",\n          style: {\n            display: \"inline-block\",\n            marginTop: \"1rem\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"5px\",\n            border: \"1px solid #28a745\",\n            backgroundColor: \"transparent\",\n            color: \"#28a745\",\n            textDecoration: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Download Decoded Secret Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 5\n  }, this);\n}\n_s(Encode, \"Ss8p3+Seipodbk1t2eG/igGW7fg=\");\n_c = Encode;\nexport default Encode;\nvar _c;\n$RefreshReg$(_c, \"Encode\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Encode","_s","inputType","setInputType","text","setText","imageFile","setImageFile","coverImageFile","setCoverImageFile","outputMedia","setOutputMedia","medium","setMedium","confidentiality","setConfidentiality","allowAI","setAllowAI","aiDecision","setAIDecision","confirmed","setConfirmed","manualEncoding","setManualEncoding","response","setResponse","loading","setLoading","encodedImage","setEncodedImage","encodeProgress","setEncodeProgress","decodeImageFile","setDecodeImageFile","decodedMessage","setDecodedMessage","decodedImageUrl","setDecodedImageUrl","decodingLoading","setDecodingLoading","decodeResponse","setDecodeResponse","decodeProgress","setDecodeProgress","interval","setInterval","oldProgress","clearInterval","getAIDecision","formData","FormData","append","res","fetch","method","body","data","json","ok","message","err","console","error","handleEncode","e","preventDefault","encoded_image_url","toggleAllowAI","handleDecode","decoded_type","decoded_content","decoded_content_url","style","maxWidth","margin","padding","display","gridTemplateColumns","gap","children","border","borderRadius","boxShadow","backgroundColor","marginBottom","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","flexDirection","value","onChange","target","width","placeholder","rows","type","accept","files","required","alignItems","checked","marginTop","onClick","marginRight","cursor","fontSize","transition","justifyContent","disabled","className","whiteSpace","src","alt","height","href","download","textDecoration","fontWeight","wordBreak","_c","$RefreshReg$"],"sources":["D:/PROJECT CS/unified-stego-system/frontend/src/components/Encode.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nfunction Encode() {\r\n  // Encoding states\r\n  const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"image\" for encoding\r\n  const [text, setText] = useState(\"\");\r\n  const [imageFile, setImageFile] = useState(null); // For secret image input type (for encoding)\r\n  const [coverImageFile, setCoverImageFile] = useState(null); // State for uploaded cover image\r\n  const [outputMedia, setOutputMedia] = useState(\"image\"); // State for desired output media (image, pdf, qr)\r\n  const [medium, setMedium] = useState(\"WhatsApp\");\r\n  const [confidentiality, setConfidentiality] = useState(\"casual\");\r\n  const [allowAI, setAllowAI] = useState(true);\r\n  const [aiDecision, setAIDecision] = useState(null);\r\n  const [confirmed, setConfirmed] = useState(false);\r\n  const [manualEncoding, setManualEncoding] = useState(\"lsb_image\"); // Default to LSB image for manual\r\n  const [response, setResponse] = useState(\"\"); // General response message for encoding\r\n  const [loading, setLoading] = useState(false); // Loading state for encoding\r\n  const [encodedImage, setEncodedImage] = useState(null); // Stores the URL of the *encoded output* image\r\n  const [encodeProgress, setEncodeProgress] = useState(0); // NEW: State for encoding progress percentage\r\n\r\n  // Decoding states\r\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\r\n  const [decodedMessage, setDecodedMessage] = useState(\"\"); // For decoded text content\r\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null); // For decoded image URL\r\n  const [decodingLoading, setDecodingLoading] = useState(false);\r\n  const [decodeResponse, setDecodeResponse] = useState(\"\");\r\n  const [decodeProgress, setDecodeProgress] = useState(0); // NEW: State for decoding progress percentage\r\n\r\n\r\n  // NEW: Effect to simulate encoding progress\r\n  useEffect(() => {\r\n    let interval;\r\n    if (loading) {\r\n      setEncodeProgress(0); // Reset progress when loading starts\r\n      interval = setInterval(() => {\r\n        setEncodeProgress(oldProgress => {\r\n          if (oldProgress < 95) { // Stop just before 100% to wait for actual completion\r\n            return oldProgress + 5; // Increment by 5%\r\n          }\r\n          return oldProgress;\r\n        });\r\n      }, 1000); // Update every 1 second\r\n    } else {\r\n      clearInterval(interval);\r\n      setEncodeProgress(0); // Reset when loading stops\r\n    }\r\n    return () => clearInterval(interval); // Cleanup interval on component unmount or loading change\r\n  }, [loading]);\r\n\r\n  // NEW: Effect to simulate decoding progress\r\n  useEffect(() => {\r\n    let interval;\r\n    if (decodingLoading) {\r\n      setDecodeProgress(0); // Reset progress when decoding starts\r\n      interval = setInterval(() => {\r\n        setDecodeProgress(oldProgress => {\r\n          if (oldProgress < 95) { // Stop just before 100%\r\n            return oldProgress + 5;\r\n          }\r\n          return oldProgress;\r\n        });\r\n      }, 1000); // Update every 1 second\r\n    } else {\r\n      clearInterval(interval);\r\n      setDecodeProgress(0); // Reset when decoding stops\r\n    }\r\n    return () => clearInterval(interval);\r\n  }, [decodingLoading]);\r\n\r\n\r\n  // --- Encoding Functions ---\r\n\r\n  const getAIDecision = async () => {\r\n    setLoading(true);\r\n    setResponse(\"\");\r\n    setEncodedImage(null);\r\n    setDecodedMessage(\"\");\r\n    setDecodedImageUrl(null);\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"inputType\", inputType);\r\n    formData.append(\"medium\", medium);\r\n    formData.append(\"confidentiality\", confidentiality);\r\n    formData.append(\"allowAI\", allowAI);\r\n    formData.append(\"outputMedia\", outputMedia);\r\n\r\n    if (inputType === \"image\" && imageFile) formData.append(\"image\", imageFile);\r\n    if (coverImageFile) formData.append(\"coverImage\", coverImageFile);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/decide_encoding\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setAIDecision(data.aiDecision);\r\n        setResponse(data.message);\r\n      } else {\r\n        setResponse(`Error: ${data.message || 'Failed to get AI decision.'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error fetching AI decision:\", err);\r\n      setResponse(\"Error connecting to server for AI decision.\");\r\n    } finally {\r\n      setLoading(false);\r\n      setEncodeProgress(100); // Set to 100% on completion/error\r\n    }\r\n  };\r\n\r\n  const handleEncode = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (allowAI && aiDecision === null) {\r\n      await getAIDecision();\r\n      return;\r\n    }\r\n\r\n    if (allowAI && aiDecision !== null && !confirmed) {\r\n        setConfirmed(true);\r\n    }\r\n\r\n    setLoading(true);\r\n    setResponse(\"\");\r\n    setEncodedImage(null);\r\n    setDecodedMessage(\"\");\r\n    setDecodedImageUrl(null);\r\n    setEncodeProgress(0); // Ensure progress starts from 0\r\n\r\n    let formData = new FormData();\r\n    formData.append(\"inputType\", inputType);\r\n\r\n    if (inputType === \"text\") {\r\n      if (!text) {\r\n          setResponse(\"Please enter text to encode.\");\r\n          setLoading(false);\r\n          return;\r\n      }\r\n      formData.append(\"text\", text);\r\n    } else if (inputType === \"image\") {\r\n      if (!imageFile) {\r\n          setResponse(\"Please select a secret image file to encode.\");\r\n          setLoading(false);\r\n          return;\r\n      }\r\n      formData.append(\"image\", imageFile);\r\n    }\r\n\r\n    if (!coverImageFile) {\r\n        setResponse(\"Please select a cover image file.\");\r\n        setLoading(false);\r\n        return;\r\n    }\r\n    formData.append(\"coverImage\", coverImageFile);\r\n\r\n    formData.append(\"medium\", medium);\r\n    formData.append(\"confidentiality\", confidentiality);\r\n    formData.append(\"allowAI\", allowAI);\r\n    formData.append(\"outputMedia\", outputMedia);\r\n    formData.append(\"encoding\", allowAI && confirmed ? aiDecision : manualEncoding);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/encode\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        setResponse(data.message);\r\n        if (data.encoded_image_url) {\r\n          setEncodedImage(data.encoded_image_url);\r\n        } else {\r\n          setEncodedImage(null);\r\n        }\r\n      } else {\r\n        setResponse(`Error: ${data.message || 'Encoding failed.'}`);\r\n        setEncodedImage(null);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during encoding:\", err);\r\n      setResponse(\"Error connecting to server for encoding.\");\r\n      setEncodedImage(null);\r\n    } finally {\r\n      setLoading(false);\r\n      setConfirmed(false);\r\n      setAIDecision(null);\r\n      setEncodeProgress(100); // Set to 100% on completion/error\r\n    }\r\n  };\r\n\r\n  const toggleAllowAI = () => {\r\n    setAllowAI(!allowAI);\r\n    setAIDecision(null);\r\n    setConfirmed(false);\r\n  };\r\n\r\n  // --- Decoding Functions ---\r\n  const handleDecode = async (e) => {\r\n    e.preventDefault();\r\n    setDecodingLoading(true);\r\n    setDecodedMessage(\"\");\r\n    setDecodedImageUrl(null);\r\n    setDecodeResponse(\"\");\r\n    setDecodeProgress(0); // Ensure progress starts from 0\r\n\r\n    if (!decodeImageFile) {\r\n      setDecodeResponse(\"Please select an image to decode.\");\r\n      setDecodingLoading(false);\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", decodeImageFile);\r\n\r\n    try {\r\n      const res = await fetch(\"http://localhost:5000/decode\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n      const data = await res.json();\r\n      if (res.ok) {\r\n        if (data.decoded_type === 'text') {\r\n            setDecodedMessage(data.decoded_content);\r\n            setDecodedImageUrl(null);\r\n            setDecodeResponse(data.message);\r\n        } else if (data.decoded_type === 'image') {\r\n            setDecodedMessage(null);\r\n            setDecodedImageUrl(data.decoded_content_url);\r\n            setDecodeResponse(data.message);\r\n        }\r\n      } else {\r\n        setDecodedMessage(\"\");\r\n        setDecodedImageUrl(null);\r\n        setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error during decoding:\", err);\r\n      setDecodedMessage(\"\");\r\n      setDecodedImageUrl(null);\r\n      setDecodeResponse(\"Error connecting to server for decoding.\");\r\n    } finally {\r\n      setDecodingLoading(false);\r\n      setDecodeProgress(100); // Set to 100% on completion/error\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"auto\", padding: \"1rem\", display: \"grid\", gridTemplateColumns: \"1fr\", gap: \"2rem\" }}>\r\n      {/* Encoding Section */}\r\n      <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n        <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Encode Your Message</h2>\r\n        <form onSubmit={handleEncode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          <label>\r\n            Choose Input Type:\r\n            <select\r\n              value={inputType}\r\n              onChange={(e) => {\r\n                setInputType(e.target.value);\r\n                setText(\"\");\r\n                setImageFile(null);\r\n              }}\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            >\r\n              <option value=\"text\">Text</option>\r\n              <option value=\"image\">Image</option>\r\n            </select>\r\n          </label>\r\n\r\n          {inputType === \"text\" && (\r\n            <textarea\r\n              value={text}\r\n              onChange={(e) => setText(e.target.value)}\r\n              placeholder=\"Enter your secret message\"\r\n              rows={4}\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          )}\r\n\r\n          {inputType === \"image\" && (\r\n            <label>\r\n                Upload Secret Image:\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => setImageFile(e.target.files[0])}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                />\r\n            </label>\r\n          )}\r\n\r\n          {/* Cover Image Upload */}\r\n          <label>\r\n            Upload Cover Image:\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg, image/jpg\"\r\n              onChange={(e) => setCoverImageFile(e.target.files[0])}\r\n              required\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n\r\n          <label>\r\n            Choose Output Media:\r\n            <select\r\n              value={outputMedia}\r\n              onChange={(e) => setOutputMedia(e.target.value)}\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            >\r\n              <option value=\"image\">Image</option>\r\n              <option value=\"pdf\">PDF (Coming Soon)</option>\r\n              <option value=\"qr\">QR Code (Coming Soon)</option>\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Medium:\r\n            <select value={medium} onChange={(e) => setMedium(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}>\r\n              <option value=\"WhatsApp\">WhatsApp</option>\r\n              <option value=\"Email\">Email</option>\r\n              <option value=\"Telegram\">Telegram</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </label>\r\n\r\n          <label>\r\n            Confidentiality:\r\n            <select\r\n              value={confidentiality}\r\n              onChange={(e) => setConfidentiality(e.target.value)}\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            >\r\n              <option value=\"casual\">Casual</option>\r\n              <option value=\"professional\">Professional</option>\r\n              <option value=\"high\">High Security</option>\r\n            </select>\r\n          </label>\r\n\r\n          <label style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={allowAI}\r\n              onChange={toggleAllowAI}\r\n            />\r\n            Allow AI to decide encoding method\r\n          </label>\r\n\r\n          {!allowAI && (\r\n            <label>\r\n              Choose Encoding Manually:\r\n              <select\r\n                value={manualEncoding}\r\n                onChange={(e) => setManualEncoding(e.target.value)}\r\n                style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n              >\r\n                <option value=\"lsb_image\">LSB Image</option>\r\n                <option value=\"dct_image\">DCT Image</option>\r\n                <option value=\"pdf_meta\">PDF Metadata (Coming Soon)</option>\r\n                <option value=\"qr_stego\">QR Code Stego (Coming Soon)</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n\r\n          {allowAI && aiDecision && !confirmed && (\r\n            <div\r\n              style={{\r\n                marginTop: \"1rem\",\r\n                backgroundColor: \"#f0f0f0\",\r\n                padding: \"1rem\",\r\n                borderRadius: \"8px\",\r\n                border: \"1px solid #ddd\",\r\n                textAlign: \"center\"\r\n              }}\r\n            >\r\n              <p style={{ margin: \"0 0 1rem 0\" }}>\r\n                AI suggests encoding using: <b style={{ color: \"#007bff\" }}>{aiDecision}</b>\r\n              </p>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setConfirmed(true)}\r\n                style={{\r\n                  marginRight: \"1rem\",\r\n                  padding: \"0.5rem 1rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"#28a745\",\r\n                  color: \"white\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Confirm\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => {\r\n                  setAIDecision(null);\r\n                  setConfirmed(false);\r\n                }}\r\n                style={{\r\n                  padding: \"0.5rem 1rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"1px solid #dc3545\",\r\n                  backgroundColor: \"transparent\",\r\n                  color: \"#dc3545\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n              >\r\n                Reject / Choose manually\r\n              </button>\r\n            </div>\r\n          )}\r\n\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              marginTop: \"1rem\",\r\n              padding: \"0.8rem 1.5rem\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              backgroundColor: \"#007bff\",\r\n              color: \"white\",\r\n              fontSize: \"1rem\",\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.3s ease\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"0.5rem\"\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            {loading ? (\r\n                <>\r\n                    Processing...\r\n                    <div className=\"spinner\"></div> {/* Spinner element */}\r\n                </>\r\n            ) : \"Encode\"}\r\n          </button>\r\n          {loading && ( // NEW: Display progress bar when loading\r\n              <div className=\"progress-container\">\r\n                  <div className=\"progress-bar\" style={{ width: `${encodeProgress}%` }}></div>\r\n              </div>\r\n          )}\r\n          {loading && <div className=\"progress-text\">{encodeProgress}%</div>} {/* NEW: Display percentage text */}\r\n        </form>\r\n\r\n        {response && (\r\n          <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\", whiteSpace: \"pre-wrap\" }}>\r\n            {response}\r\n          </p>\r\n        )}\r\n\r\n        {encodedImage && (\r\n          <div style={{ marginTop: \"1rem\", textAlign: \"center\" }}>\r\n            <h3>Encoded Image Preview:</h3>\r\n            <img\r\n              src={encodedImage}\r\n              alt=\"Encoded\"\r\n              style={{ maxWidth: \"100%\", height: \"auto\", border: \"1px solid #ccc\", borderRadius: \"8px\", marginTop: \"0.5rem\" }}\r\n            />\r\n            <br />\r\n            <a\r\n              href={encodedImage}\r\n              download=\"encoded.png\"\r\n              style={{\r\n                display: \"inline-block\",\r\n                marginTop: \"1rem\",\r\n                padding: \"0.5rem 1rem\",\r\n                borderRadius: \"5px\",\r\n                border: \"1px solid #007bff\",\r\n                backgroundColor: \"transparent\",\r\n                color: \"#007bff\",\r\n                textDecoration: \"none\",\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              Download Encoded Image\r\n            </a>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Decoding Section */}\r\n      <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n        <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Decode Your Message</h2>\r\n        <form onSubmit={handleDecode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          <label>\r\n            Upload Encoded Image:\r\n            <input\r\n              type=\"file\"\r\n              accept=\"image/png, image/jpeg, image/jpg\"\r\n              onChange={(e) => setDecodeImageFile(e.target.files[0])}\r\n              style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n            />\r\n          </label>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              marginTop: \"1rem\",\r\n              padding: \"0.8rem 1.5rem\",\r\n              borderRadius: \"5px\",\r\n              border: \"none\",\r\n              backgroundColor: \"#28a745\",\r\n              color: \"white\",\r\n              fontSize: \"1rem\",\r\n              cursor: \"pointer\",\r\n              transition: \"background-color 0.3s ease\",\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              justifyContent: \"center\",\r\n              gap: \"0.5rem\"\r\n            }}\r\n            disabled={decodingLoading}\r\n          >\r\n            {decodingLoading ? (\r\n                <>\r\n                    Decoding...\r\n                    <div className=\"spinner\"></div> {/* Spinner element */}\r\n                </>\r\n            ) : \"Decode Image\"}\r\n          </button>\r\n          {decodingLoading && ( // NEW: Display progress bar when decoding\r\n              <div className=\"progress-container\">\r\n                  <div className=\"progress-bar\" style={{ width: `${decodeProgress}%`, backgroundColor: '#28a745' }}></div> {/* Green for decode */}\r\n              </div>\r\n          )}\r\n          {decodingLoading && <div className=\"progress-text\">{decodeProgress}%</div>} {/* NEW: Display percentage text */}\r\n        </form>\r\n\r\n        {decodeResponse && (\r\n          <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\", whiteSpace: \"pre-wrap\" }}>\r\n            {decodeResponse}\r\n          </p>\r\n        )}\r\n\r\n        {decodedMessage && (\r\n          <div style={{ marginTop: \"1rem\", padding: \"1rem\", border: \"1px solid #007bff\", borderRadius: \"8px\", backgroundColor: \"#e6f7ff\" }}>\r\n            <h3>Decoded Message:</h3>\r\n            <p style={{ fontWeight: \"bold\", wordBreak: \"break-all\" }}>{decodedMessage}</p>\r\n          </div>\r\n        )}\r\n         {/* Display decoded image if type is image */}\r\n         {decodedImageUrl && (\r\n            <div style={{ marginTop: \"1rem\", textAlign: \"center\" }}>\r\n                <h3>Decoded Secret Image:</h3>\r\n                <img\r\n                src={decodedImageUrl}\r\n                alt=\"Decoded Secret\"\r\n                style={{ maxWidth: \"100%\", height: \"auto\", border: \"1px solid #ccc\", borderRadius: \"8px\", marginTop: \"0.5rem\" }}\r\n                />\r\n                <br />\r\n                <a\r\n                href={decodedImageUrl}\r\n                download=\"decoded_secret_image.png\"\r\n                style={{\r\n                    display: \"inline-block\",\r\n                    marginTop: \"1rem\",\r\n                    padding: \"0.5rem 1rem\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #28a745\",\r\n                    backgroundColor: \"transparent\",\r\n                    color: \"#28a745\",\r\n                    textDecoration: \"none\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n                >\r\n                Download Decoded Secret Image\r\n                </a>\r\n            </div>\r\n         )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Encode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}