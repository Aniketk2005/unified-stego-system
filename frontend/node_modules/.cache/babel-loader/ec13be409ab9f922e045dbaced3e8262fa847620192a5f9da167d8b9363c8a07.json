{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT CS\\\\unified-stego-system\\\\frontend\\\\src\\\\components\\\\Encode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Encode() {\n  _s();\n  // Encoding states\n  const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"image\" for encoding\n  const [text, setText] = useState(\"\");\n  const [imageFile, setImageFile] = useState(null); // For image input type (for encoding)\n  const [outputMedia, setOutputMedia] = useState(\"image\"); // NEW: State for desired output media (image, pdf, qr)\n  const [medium, setMedium] = useState(\"WhatsApp\");\n  const [confidentiality, setConfidentiality] = useState(\"casual\");\n  const [allowAI, setAllowAI] = useState(true);\n  const [aiDecision, setAIDecision] = useState(null);\n  const [confirmed, setConfirmed] = useState(false);\n  const [manualEncoding, setManualEncoding] = useState(\"pdf\"); // Manual choice (future use for other types)\n  const [response, setResponse] = useState(\"\"); // General response message for encoding\n  const [loading, setLoading] = useState(false); // Loading state for encoding\n  const [encodedImage, setEncodedImage] = useState(null); // Stores the URL of the encoded image\n\n  // Decoding states (already implemented)\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\n  const [decodedMessage, setDecodedMessage] = useState(\"\");\n  const [decodingLoading, setDecodingLoading] = useState(false);\n  const [decodeResponse, setDecodeResponse] = useState(\"\");\n\n  // --- Encoding Functions ---\n\n  const getAIDecision = async () => {\n    setLoading(true);\n    setResponse(\"\");\n    setEncodedImage(null);\n    let formData = new FormData();\n    formData.append(\"inputType\", inputType);\n    formData.append(\"medium\", medium);\n    formData.append(\"confidentiality\", confidentiality);\n    formData.append(\"allowAI\", allowAI);\n    formData.append(\"outputMedia\", outputMedia); // NEW: Send selected output media to AI decision\n\n    try {\n      const res = await fetch(\"http://localhost:5000/decide_encoding\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setAIDecision(data.aiDecision);\n        setResponse(data.message);\n      } else {\n        setResponse(`Error: ${data.message || 'Failed to get AI decision.'}`);\n      }\n    } catch (err) {\n      console.error(\"Error fetching AI decision:\", err);\n      setResponse(\"Error connecting to server for AI decision.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleEncode = async e => {\n    e.preventDefault();\n    if (allowAI && aiDecision === null) {\n      await getAIDecision();\n      return;\n    }\n    if (allowAI && aiDecision !== null && !confirmed) {\n      setConfirmed(true);\n    }\n    setLoading(true);\n    setResponse(\"\");\n    setEncodedImage(null);\n    let formData = new FormData();\n    formData.append(\"inputType\", inputType); // \"text\" or \"image\"\n\n    if (inputType === \"text\") {\n      formData.append(\"text\", text);\n    } else if (inputType === \"image\") {\n      // Enabled for image encoding\n      if (imageFile) {\n        formData.append(\"image\", imageFile);\n      } else {\n        setResponse(\"Please select an image file to encode.\");\n        setLoading(false);\n        return; // Stop if image type selected but no file\n      }\n    }\n    formData.append(\"medium\", medium);\n    formData.append(\"confidentiality\", confidentiality);\n    formData.append(\"allowAI\", allowAI);\n    formData.append(\"outputMedia\", outputMedia); // NEW: Send selected output media to /encode\n    // Use AI decision if allowed and confirmed, else manual encoding (which now includes outputMedia)\n    formData.append(\"encoding\", allowAI && confirmed ? aiDecision : manualEncoding);\n    try {\n      const res = await fetch(\"http://localhost:5000/encode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setResponse(data.message);\n        if (data.encoded_image_url) {\n          setEncodedImage(data.encoded_image_url);\n        } else {\n          setEncodedImage(null);\n        }\n      } else {\n        setResponse(`Error: ${data.message || 'Encoding failed.'}`);\n        setEncodedImage(null);\n      }\n    } catch (err) {\n      console.error(\"Error during encoding:\", err);\n      setResponse(\"Error connecting to server for encoding.\");\n      setEncodedImage(null);\n    } finally {\n      setLoading(false);\n      setConfirmed(false);\n      setAIDecision(null);\n    }\n  };\n  const toggleAllowAI = () => {\n    setAllowAI(!allowAI);\n    setAIDecision(null);\n    setConfirmed(false);\n  };\n\n  // --- Decoding Functions ---\n  const handleDecode = async e => {\n    e.preventDefault();\n    setDecodingLoading(true);\n    setDecodedMessage(\"\");\n    setDecodeResponse(\"\");\n    if (!decodeImageFile) {\n      setDecodeResponse(\"Please select an image to decode.\");\n      setDecodingLoading(false);\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", decodeImageFile);\n    try {\n      const res = await fetch(\"http://localhost:5000/decode\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok) {\n        setDecodedMessage(data.decoded_text);\n        setDecodeResponse(data.message);\n      } else {\n        setDecodedMessage(\"\");\n        setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\n      }\n    } catch (err) {\n      console.error(\"Error during decoding:\", err);\n      setDecodedMessage(\"\");\n      setDecodeResponse(\"Error connecting to server for decoding.\");\n    } finally {\n      setDecodingLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      padding: \"1rem\",\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gap: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Encode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEncode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Input Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: inputType,\n            onChange: e => {\n              setInputType(e.target.value);\n              setText(\"\");\n              setImageFile(null); // Clear image when switching type\n            },\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"text\",\n              children: \"Text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this), inputType === \"text\" && /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter your secret message\",\n          rows: 4,\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 17\n        }, this), inputType === \"image\" && /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => setImageFile(e.target.files[0]),\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\",\n            border: \"1px solid #ccc\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Output Media:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: outputMedia,\n            onChange: e => setOutputMedia(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"image\",\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pdf\",\n              children: \"PDF (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"qr\",\n              children: \"QR Code (Coming Soon)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Medium:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: medium,\n            onChange: e => setMedium(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"WhatsApp\",\n              children: \"WhatsApp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Email\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Telegram\",\n              children: \"Telegram\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Other\",\n              children: \"Other\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Confidentiality:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: confidentiality,\n            onChange: e => setConfidentiality(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"casual\",\n              children: \"Casual\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"professional\",\n              children: \"Professional\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"high\",\n              children: \"High Security\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            gap: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: allowAI,\n            onChange: toggleAllowAI\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 17\n          }, this), \"Allow AI to decide encoding method\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 15\n        }, this), !allowAI && /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Choose Encoding Manually:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: manualEncoding,\n            onChange: e => setManualEncoding(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"lsb_image\",\n              children: \"LSB Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 21\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"pdf_meta\",\n              children: \"PDF Metadata\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"qr_stego\",\n              children: \"QR Code Stego\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 17\n        }, this), allowAI && aiDecision && !confirmed && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"1rem\",\n            backgroundColor: \"#f0f0f0\",\n            padding: \"1rem\",\n            borderRadius: \"8px\",\n            border: \"1px solid #ddd\",\n            textAlign: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              margin: \"0 0 1rem 0\"\n            },\n            children: [\"AI suggests encoding using: \", /*#__PURE__*/_jsxDEV(\"b\", {\n              style: {\n                color: \"#007bff\"\n              },\n              children: aiDecision\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setConfirmed(true),\n            style: {\n              marginRight: \"1rem\",\n              padding: \"0.5rem 1rem\",\n              borderRadius: \"5px\",\n              border: \"none\",\n              backgroundColor: \"#28a745\",\n              color: \"white\",\n              cursor: \"pointer\"\n            },\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => {\n              setAIDecision(null);\n              setConfirmed(false);\n            },\n            style: {\n              padding: \"0.5rem 1rem\",\n              borderRadius: \"5px\",\n              border: \"1px solid #dc3545\",\n              backgroundColor: \"transparent\",\n              color: \"#dc3545\",\n              cursor: \"pointer\"\n            },\n            children: \"Reject / Choose manually\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#007bff\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s ease\"\n          },\n          disabled: loading,\n          children: loading ? \"Processing...\" : \"Encode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 15\n      }, this), encodedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Encoded Image Preview:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: encodedImage,\n          alt: \"Encoded\",\n          style: {\n            maxWidth: \"100%\",\n            height: \"auto\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"8px\",\n            marginTop: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: encodedImage,\n          download: \"encoded.png\",\n          style: {\n            display: \"inline-block\",\n            marginTop: \"1rem\",\n            padding: \"0.5rem 1rem\",\n            borderRadius: \"5px\",\n            border: \"1px solid #007bff\",\n            backgroundColor: \"transparent\",\n            color: \"#007bff\",\n            textDecoration: \"none\",\n            cursor: \"pointer\"\n          },\n          children: \"Download Encoded Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        padding: \"1.5rem\",\n        border: \"1px solid #ddd\",\n        borderRadius: \"8px\",\n        boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          marginBottom: \"1rem\",\n          textAlign: \"center\",\n          color: \"#333\"\n        },\n        children: \"Decode Your Message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDecode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Encoded Image:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg, image/jpg\",\n            onChange: e => setDecodeImageFile(e.target.files[0]),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\",\n              borderRadius: \"4px\",\n              border: \"1px solid #ccc\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            marginTop: \"1rem\",\n            padding: \"0.8rem 1.5rem\",\n            borderRadius: \"5px\",\n            border: \"none\",\n            backgroundColor: \"#28a745\",\n            color: \"white\",\n            fontSize: \"1rem\",\n            cursor: \"pointer\",\n            transition: \"background-color 0.3s ease\"\n          },\n          disabled: decodingLoading,\n          children: decodingLoading ? \"Decoding...\" : \"Decode Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 13\n      }, this), decodeResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"0.5rem\",\n          borderRadius: \"4px\",\n          backgroundColor: \"#e9ecef\",\n          whiteSpace: \"pre-wrap\"\n        },\n        children: decodeResponse\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 15\n      }, this), decodedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"1rem\",\n          padding: \"1rem\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"8px\",\n          backgroundColor: \"#e6f7ff\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Decoded Message:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontWeight: \"bold\",\n            wordBreak: \"break-all\"\n          },\n          children: decodedMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 9\n  }, this);\n}\n_s(Encode, \"/P1w0duTgej3dLTTGHUMFX7Pkuk=\");\n_c = Encode;\nexport default Encode;\nvar _c;\n$RefreshReg$(_c, \"Encode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Encode","_s","inputType","setInputType","text","setText","imageFile","setImageFile","outputMedia","setOutputMedia","medium","setMedium","confidentiality","setConfidentiality","allowAI","setAllowAI","aiDecision","setAIDecision","confirmed","setConfirmed","manualEncoding","setManualEncoding","response","setResponse","loading","setLoading","encodedImage","setEncodedImage","decodeImageFile","setDecodeImageFile","decodedMessage","setDecodedMessage","decodingLoading","setDecodingLoading","decodeResponse","setDecodeResponse","getAIDecision","formData","FormData","append","res","fetch","method","body","data","json","ok","message","err","console","error","handleEncode","e","preventDefault","encoded_image_url","toggleAllowAI","handleDecode","decoded_text","style","maxWidth","margin","padding","display","gridTemplateColumns","gap","children","border","borderRadius","boxShadow","backgroundColor","marginBottom","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","flexDirection","value","onChange","target","width","placeholder","rows","type","accept","files","alignItems","checked","marginTop","onClick","marginRight","cursor","fontSize","transition","disabled","whiteSpace","src","alt","height","href","download","textDecoration","fontWeight","wordBreak","_c","$RefreshReg$"],"sources":["D:/PROJECT CS/unified-stego-system/frontend/src/components/Encode.js"],"sourcesContent":["    import React, { useState } from \"react\";\r\n\r\n    function Encode() {\r\n      // Encoding states\r\n      const [inputType, setInputType] = useState(\"text\"); // \"text\" or \"image\" for encoding\r\n      const [text, setText] = useState(\"\");\r\n      const [imageFile, setImageFile] = useState(null); // For image input type (for encoding)\r\n      const [outputMedia, setOutputMedia] = useState(\"image\"); // NEW: State for desired output media (image, pdf, qr)\r\n      const [medium, setMedium] = useState(\"WhatsApp\");\r\n      const [confidentiality, setConfidentiality] = useState(\"casual\");\r\n      const [allowAI, setAllowAI] = useState(true);\r\n      const [aiDecision, setAIDecision] = useState(null);\r\n      const [confirmed, setConfirmed] = useState(false);\r\n      const [manualEncoding, setManualEncoding] = useState(\"pdf\"); // Manual choice (future use for other types)\r\n      const [response, setResponse] = useState(\"\"); // General response message for encoding\r\n      const [loading, setLoading] = useState(false); // Loading state for encoding\r\n      const [encodedImage, setEncodedImage] = useState(null); // Stores the URL of the encoded image\r\n\r\n      // Decoding states (already implemented)\r\n      const [decodeImageFile, setDecodeImageFile] = useState(null);\r\n      const [decodedMessage, setDecodedMessage] = useState(\"\");\r\n      const [decodingLoading, setDecodingLoading] = useState(false);\r\n      const [decodeResponse, setDecodeResponse] = useState(\"\");\r\n\r\n\r\n      // --- Encoding Functions ---\r\n\r\n      const getAIDecision = async () => {\r\n        setLoading(true);\r\n        setResponse(\"\");\r\n        setEncodedImage(null);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"inputType\", inputType);\r\n        formData.append(\"medium\", medium);\r\n        formData.append(\"confidentiality\", confidentiality);\r\n        formData.append(\"allowAI\", allowAI);\r\n        formData.append(\"outputMedia\", outputMedia); // NEW: Send selected output media to AI decision\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/decide_encoding\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n          });\r\n          const data = await res.json();\r\n          if (res.ok) {\r\n            setAIDecision(data.aiDecision);\r\n            setResponse(data.message);\r\n          } else {\r\n            setResponse(`Error: ${data.message || 'Failed to get AI decision.'}`);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error fetching AI decision:\", err);\r\n          setResponse(\"Error connecting to server for AI decision.\");\r\n        } finally {\r\n          setLoading(false);\r\n        }\r\n      };\r\n\r\n      const handleEncode = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (allowAI && aiDecision === null) {\r\n          await getAIDecision();\r\n          return;\r\n        }\r\n\r\n        if (allowAI && aiDecision !== null && !confirmed) {\r\n            setConfirmed(true);\r\n        }\r\n\r\n        setLoading(true);\r\n        setResponse(\"\");\r\n        setEncodedImage(null);\r\n\r\n        let formData = new FormData();\r\n        formData.append(\"inputType\", inputType); // \"text\" or \"image\"\r\n\r\n        if (inputType === \"text\") {\r\n          formData.append(\"text\", text);\r\n        } else if (inputType === \"image\") { // Enabled for image encoding\r\n          if (imageFile) {\r\n            formData.append(\"image\", imageFile);\r\n          } else {\r\n            setResponse(\"Please select an image file to encode.\");\r\n            setLoading(false);\r\n            return; // Stop if image type selected but no file\r\n          }\r\n        }\r\n\r\n        formData.append(\"medium\", medium);\r\n        formData.append(\"confidentiality\", confidentiality);\r\n        formData.append(\"allowAI\", allowAI);\r\n        formData.append(\"outputMedia\", outputMedia); // NEW: Send selected output media to /encode\r\n        // Use AI decision if allowed and confirmed, else manual encoding (which now includes outputMedia)\r\n        formData.append(\"encoding\", allowAI && confirmed ? aiDecision : manualEncoding);\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/encode\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n          });\r\n          const data = await res.json();\r\n          if (res.ok) {\r\n            setResponse(data.message);\r\n            if (data.encoded_image_url) {\r\n              setEncodedImage(data.encoded_image_url);\r\n            } else {\r\n              setEncodedImage(null);\r\n            }\r\n          } else {\r\n            setResponse(`Error: ${data.message || 'Encoding failed.'}`);\r\n            setEncodedImage(null);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error during encoding:\", err);\r\n          setResponse(\"Error connecting to server for encoding.\");\r\n          setEncodedImage(null);\r\n        } finally {\r\n          setLoading(false);\r\n          setConfirmed(false);\r\n          setAIDecision(null);\r\n        }\r\n      };\r\n\r\n      const toggleAllowAI = () => {\r\n        setAllowAI(!allowAI);\r\n        setAIDecision(null);\r\n        setConfirmed(false);\r\n      };\r\n\r\n      // --- Decoding Functions ---\r\n      const handleDecode = async (e) => {\r\n        e.preventDefault();\r\n        setDecodingLoading(true);\r\n        setDecodedMessage(\"\");\r\n        setDecodeResponse(\"\");\r\n\r\n        if (!decodeImageFile) {\r\n          setDecodeResponse(\"Please select an image to decode.\");\r\n          setDecodingLoading(false);\r\n          return;\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"image\", decodeImageFile);\r\n\r\n        try {\r\n          const res = await fetch(\"http://localhost:5000/decode\", {\r\n            method: \"POST\",\r\n            body: formData,\r\n          });\r\n          const data = await res.json();\r\n          if (res.ok) {\r\n            setDecodedMessage(data.decoded_text);\r\n            setDecodeResponse(data.message);\r\n          } else {\r\n            setDecodedMessage(\"\");\r\n            setDecodeResponse(`Error: ${data.message || 'Decoding failed.'}`);\r\n          }\r\n        } catch (err) {\r\n          console.error(\"Error during decoding:\", err);\r\n          setDecodedMessage(\"\");\r\n          setDecodeResponse(\"Error connecting to server for decoding.\");\r\n        } finally {\r\n          setDecodingLoading(false);\r\n        }\r\n      };\r\n\r\n\r\n      return (\r\n        <div style={{ maxWidth: \"800px\", margin: \"auto\", padding: \"1rem\", display: \"grid\", gridTemplateColumns: \"1fr\", gap: \"2rem\" }}>\r\n          {/* Encoding Section */}\r\n          <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n            <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Encode Your Message</h2>\r\n            <form onSubmit={handleEncode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n              <label>\r\n                Choose Input Type:\r\n                <select\r\n                  value={inputType}\r\n                  onChange={(e) => {\r\n                    setInputType(e.target.value);\r\n                    setText(\"\");\r\n                    setImageFile(null); // Clear image when switching type\r\n                  }}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                >\r\n                  <option value=\"text\">Text</option>\r\n                  <option value=\"image\">Image</option> {/* Enabled the image option */}\r\n                </select>\r\n              </label>\r\n\r\n              {inputType === \"text\" && (\r\n                <textarea\r\n                  value={text}\r\n                  onChange={(e) => setText(e.target.value)}\r\n                  placeholder=\"Enter your secret message\"\r\n                  rows={4}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                />\r\n              )}\r\n\r\n              {inputType === \"image\" && (\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => setImageFile(e.target.files[0])}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                />\r\n              )}\r\n\r\n              {/* NEW: Output Media Dropdown */}\r\n              <label>\r\n                Choose Output Media:\r\n                <select\r\n                  value={outputMedia}\r\n                  onChange={(e) => setOutputMedia(e.target.value)}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                >\r\n                  <option value=\"image\">Image</option>\r\n                  <option value=\"pdf\">PDF (Coming Soon)</option>\r\n                  <option value=\"qr\">QR Code (Coming Soon)</option>\r\n                </select>\r\n              </label>\r\n\r\n              <label>\r\n                Medium:\r\n                <select value={medium} onChange={(e) => setMedium(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}>\r\n                  <option value=\"WhatsApp\">WhatsApp</option>\r\n                  <option value=\"Email\">Email</option>\r\n                  <option value=\"Telegram\">Telegram</option>\r\n                  <option value=\"Other\">Other</option>\r\n                </select>\r\n              </label>\r\n\r\n              <label>\r\n                Confidentiality:\r\n                <select\r\n                  value={confidentiality}\r\n                  onChange={(e) => setConfidentiality(e.target.value)}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                >\r\n                  <option value=\"casual\">Casual</option>\r\n                  <option value=\"professional\">Professional</option>\r\n                  <option value=\"high\">High Security</option>\r\n                </select>\r\n              </label>\r\n\r\n              <label style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={allowAI}\r\n                  onChange={toggleAllowAI}\r\n                />\r\n                Allow AI to decide encoding method\r\n              </label>\r\n\r\n              {!allowAI && (\r\n                <label>\r\n                  Choose Encoding Manually:\r\n                  <select\r\n                    value={manualEncoding}\r\n                    onChange={(e) => setManualEncoding(e.target.value)}\r\n                    style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                  >\r\n                    {/* These options will need to dynamically update based on outputMedia selected or be more generic */}\r\n                    <option value=\"lsb_image\">LSB Image</option> {/* Example: Specific algorithm for image */}\r\n                    <option value=\"pdf_meta\">PDF Metadata</option>\r\n                    <option value=\"qr_stego\">QR Code Stego</option>\r\n                  </select>\r\n                </label>\r\n              )}\r\n\r\n              {allowAI && aiDecision && !confirmed && (\r\n                <div\r\n                  style={{\r\n                    marginTop: \"1rem\",\r\n                    backgroundColor: \"#f0f0f0\",\r\n                    padding: \"1rem\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"1px solid #ddd\",\r\n                    textAlign: \"center\"\r\n                  }}\r\n                >\r\n                  <p style={{ margin: \"0 0 1rem 0\" }}>\r\n                    AI suggests encoding using: <b style={{ color: \"#007bff\" }}>{aiDecision}</b>\r\n                  </p>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => setConfirmed(true)}\r\n                    style={{\r\n                      marginRight: \"1rem\",\r\n                      padding: \"0.5rem 1rem\",\r\n                      borderRadius: \"5px\",\r\n                      border: \"none\",\r\n                      backgroundColor: \"#28a745\",\r\n                      color: \"white\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Confirm\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => {\r\n                      setAIDecision(null);\r\n                      setConfirmed(false);\r\n                    }}\r\n                    style={{\r\n                      padding: \"0.5rem 1rem\",\r\n                      borderRadius: \"5px\",\r\n                      border: \"1px solid #dc3545\",\r\n                      backgroundColor: \"transparent\",\r\n                      color: \"#dc3545\",\r\n                      cursor: \"pointer\",\r\n                    }}\r\n                  >\r\n                    Reject / Choose manually\r\n                  </button>\r\n                </div>\r\n              )}\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                  padding: \"0.8rem 1.5rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"#007bff\",\r\n                  color: \"white\",\r\n                  fontSize: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                  transition: \"background-color 0.3s ease\",\r\n                }}\r\n                disabled={loading}\r\n              >\r\n                {loading ? \"Processing...\" : \"Encode\"}\r\n              </button>\r\n            </form>\r\n\r\n            {response && (\r\n              <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\", whiteSpace: \"pre-wrap\" }}>\r\n                {response}\r\n              </p>\r\n            )}\r\n\r\n            {encodedImage && (\r\n              <div style={{ marginTop: \"1rem\", textAlign: \"center\" }}>\r\n                <h3>Encoded Image Preview:</h3>\r\n                <img\r\n                  src={encodedImage}\r\n                  alt=\"Encoded\"\r\n                  style={{ maxWidth: \"100%\", height: \"auto\", border: \"1px solid #ccc\", borderRadius: \"8px\", marginTop: \"0.5rem\" }}\r\n                />\r\n                <br />\r\n                <a\r\n                  href={encodedImage}\r\n                  download=\"encoded.png\"\r\n                  style={{\r\n                    display: \"inline-block\",\r\n                    marginTop: \"1rem\",\r\n                    padding: \"0.5rem 1rem\",\r\n                    borderRadius: \"5px\",\r\n                    border: \"1px solid #007bff\",\r\n                    backgroundColor: \"transparent\",\r\n                    color: \"#007bff\",\r\n                    textDecoration: \"none\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                >\r\n                  Download Encoded Image\r\n                </a>\r\n              </div>\r\n            )}\r\n          </div>\r\n\r\n          {/* Decoding Section (unchanged from previous step) */}\r\n          <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n            <h2 style={{ marginBottom: \"1rem\", textAlign: \"center\", color: \"#333\" }}>Decode Your Message</h2>\r\n            <form onSubmit={handleDecode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n              <label>\r\n                Upload Encoded Image:\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\"image/png, image/jpeg, image/jpg\"\r\n                  onChange={(e) => setDecodeImageFile(e.target.files[0])}\r\n                  style={{ width: \"100%\", padding: \"0.5rem\", borderRadius: \"4px\", border: \"1px solid #ccc\" }}\r\n                />\r\n              </label>\r\n\r\n              <button\r\n                type=\"submit\"\r\n                style={{\r\n                  marginTop: \"1rem\",\r\n                  padding: \"0.8rem 1.5rem\",\r\n                  borderRadius: \"5px\",\r\n                  border: \"none\",\r\n                  backgroundColor: \"#28a745\",\r\n                  color: \"white\",\r\n                  fontSize: \"1rem\",\r\n                  cursor: \"pointer\",\r\n                  transition: \"background-color 0.3s ease\",\r\n                }}\r\n                disabled={decodingLoading}\r\n              >\r\n                {decodingLoading ? \"Decoding...\" : \"Decode Image\"}\r\n              </button>\r\n            </form>\r\n\r\n            {decodeResponse && (\r\n              <p style={{ marginTop: \"1rem\", padding: \"0.5rem\", borderRadius: \"4px\", backgroundColor: \"#e9ecef\", whiteSpace: \"pre-wrap\" }}>\r\n                {decodeResponse}\r\n              </p>\r\n            )}\r\n\r\n            {decodedMessage && (\r\n              <div style={{ marginTop: \"1rem\", padding: \"1rem\", border: \"1px solid #007bff\", borderRadius: \"8px\", backgroundColor: \"#e6f7ff\" }}>\r\n                <h3>Decoded Message:</h3>\r\n                <p style={{ fontWeight: \"bold\", wordBreak: \"break-all\" }}>{decodedMessage}</p>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    export default Encode;\r\n    "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}