{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECT CS\\\\unified-stego-system\\\\frontend\\\\src\\\\components\\\\Encode.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// Reusable component for styled sections\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Section = ({\n  title,\n  children\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: \"1.5rem\",\n    border: \"1px solid #ddd\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\",\n    backgroundColor: \"#fff\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n    style: {\n      marginBottom: \"1.5rem\",\n      textAlign: \"center\",\n      color: \"#333\",\n      borderBottom: \"2px solid #007bff\",\n      paddingBottom: \"0.5rem\"\n    },\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this), children]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 5,\n  columnNumber: 3\n}, this);\n_c = Section;\nfunction Encode() {\n  _s();\n  // Encoding States\n  const [inputType, setInputType] = useState('text'); // 'text' or 'image'\n  const [text, setText] = useState('');\n  const [secretImage, setSecretImage] = useState(null);\n  const [coverImage, setCoverImage] = useState(null);\n  const [encodePassword, setEncodePassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [encodeProgress, setEncodeProgress] = useState(0);\n  const [response, setResponse] = useState('');\n  const [encodedImage, setEncodedImage] = useState(null);\n\n  // Decoding States\n  const [decodeType, setDecodeType] = useState('text'); // 'text' or 'image'\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\n  const [decodePassword, setDecodePassword] = useState('');\n  const [decodingLoading, setDecodingLoading] = useState(false);\n  const [decodeResponse, setDecodeResponse] = useState('');\n  const [decodedMessage, setDecodedMessage] = useState('');\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null);\n\n  // --- API HANDLERS ---\n  const pollJobStatus = jobId => {\n    const interval = setInterval(async () => {\n      try {\n        const res = await fetch(`http://localhost:5000/status/${jobId}`);\n        const data = await res.json();\n        if (data.status === 'processing') {\n          setEncodeProgress(data.progress);\n        } else if (data.status === 'complete') {\n          clearInterval(interval);\n          setLoading(false);\n          setResponse('Encoding successful!');\n          setEncodeProgress(100);\n          setEncodedImage(data.encoded_image_url);\n        } else if (data.status === 'error') {\n          clearInterval(interval);\n          setLoading(false);\n          setResponse(`Error: ${data.message}`);\n        }\n      } catch (err) {\n        clearInterval(interval);\n        setLoading(false);\n        setResponse('Error: Could not poll job status.');\n      }\n    }, 2000);\n  };\n  const handleEncode = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setResponse('Starting encoding process...');\n    setEncodedImage(null);\n    setEncodeProgress(0);\n    const formData = new FormData();\n    formData.append('inputType', inputType);\n    formData.append('coverImage', coverImage);\n    if (encodePassword) formData.append('password', encodePassword);\n    if (inputType === 'text') {\n      formData.append('text', text);\n    } else {\n      formData.append('secretImage', secretImage);\n    }\n    try {\n      const res = await fetch('http://localhost:5000/encode', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      if (res.ok && data.job_id) {\n        setResponse('Processing... Please wait.');\n        pollJobStatus(data.job_id);\n      } else {\n        setResponse(`Error: ${data.message || 'Failed to start encoding.'}`);\n        setLoading(false);\n      }\n    } catch (err) {\n      setResponse('Error: Could not connect to the server.');\n      setLoading(false);\n    }\n  };\n  const handleDecode = async e => {\n    e.preventDefault();\n    setDecodingLoading(true);\n    setDecodeResponse('Decoding in progress...');\n    setDecodedMessage('');\n    setDecodedImageUrl(null);\n    const formData = new FormData();\n    formData.append('image', decodeImageFile);\n    formData.append('decodeType', decodeType); // Specify what to extract\n    if (decodePassword) formData.append('password', decodePassword);\n    try {\n      const res = await fetch('http://localhost:5000/decode', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setDecodeResponse(data.message);\n      if (res.ok) {\n        if (data.decoded_type === 'text') setDecodedMessage(data.decoded_content);\n        if (data.decoded_type === 'image') setDecodedImageUrl(data.decoded_content_url);\n      }\n    } catch (err) {\n      setDecodeResponse('Error: Could not connect to the server.');\n    } finally {\n      setDecodingLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: \"800px\",\n      margin: \"auto\",\n      padding: \"1rem\",\n      display: \"grid\",\n      gridTemplateColumns: \"1fr\",\n      gap: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Section, {\n      title: \"Encode Data\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleEncode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"1. Select Input Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: inputType,\n          onChange: e => setInputType(e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Text in Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"image\",\n            children: \"Image in Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), inputType === 'text' ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: text,\n          onChange: e => setText(e.target.value),\n          placeholder: \"Enter your secret message...\",\n          rows: 4,\n          required: true,\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Secret Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setSecretImage(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Cover Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setCoverImage(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Encryption Password (Optional): \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: encodePassword,\n            onChange: e => setEncodePassword(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          style: {\n            padding: \"0.8rem\",\n            cursor: \"pointer\"\n          },\n          children: loading ? `Processing... ${encodeProgress}%` : \"Encode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), response && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: \"#f0f0f0\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\"\n          },\n          children: response\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 24\n        }, this), encodedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Encoded Image Ready:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: encodedImage,\n            alt: \"Encoded\",\n            style: {\n              maxWidth: \"100%\",\n              borderRadius: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: encodedImage,\n            download: true,\n            style: {\n              display: \"block\",\n              marginTop: \"0.5rem\"\n            },\n            children: \"Download Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Section, {\n      title: \"Decode Data\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleDecode,\n        style: {\n          display: \"flex\",\n          flexDirection: \"column\",\n          gap: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"1. Select What to Extract:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: decodeType,\n          onChange: e => setDecodeType(e.target.value),\n          style: {\n            width: \"100%\",\n            padding: \"0.5rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"text\",\n            children: \"Extract Text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"image\",\n            children: \"Extract Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Upload Stego Image: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => setDecodeImageFile(e.target.files[0]),\n            required: true,\n            style: {\n              width: \"100%\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Decryption Password (if used): \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            value: decodePassword,\n            onChange: e => setDecodePassword(e.target.value),\n            style: {\n              width: \"100%\",\n              padding: \"0.5rem\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 49\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: decodingLoading,\n          style: {\n            padding: \"0.8rem\",\n            cursor: \"pointer\"\n          },\n          children: decodingLoading ? \"Decoding...\" : \"Decode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), decodeResponse && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            backgroundColor: \"#f0f0f0\",\n            padding: \"0.5rem\",\n            borderRadius: \"4px\"\n          },\n          children: decodeResponse\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 30\n        }, this), decodedMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Decoded Text:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              wordBreak: \"break-all\"\n            },\n            children: decodedMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), decodedImageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: \"center\",\n            marginTop: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Decoded Image:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: decodedImageUrl,\n            alt: \"Decoded\",\n            style: {\n              maxWidth: \"100%\",\n              borderRadius: \"8px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            href: decodedImageUrl,\n            download: true,\n            style: {\n              display: \"block\",\n              marginTop: \"0.5rem\"\n            },\n            children: \"Download Decoded Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n}\n_s(Encode, \"PtlL4CTJblra2dnIIaVPj8rfsRc=\");\n_c2 = Encode;\nexport default Encode;\nvar _c, _c2;\n$RefreshReg$(_c, \"Section\");\n$RefreshReg$(_c2, \"Encode\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Section","title","children","style","padding","border","borderRadius","boxShadow","backgroundColor","marginBottom","textAlign","color","borderBottom","paddingBottom","fileName","_jsxFileName","lineNumber","columnNumber","_c","Encode","_s","inputType","setInputType","text","setText","secretImage","setSecretImage","coverImage","setCoverImage","encodePassword","setEncodePassword","loading","setLoading","encodeProgress","setEncodeProgress","response","setResponse","encodedImage","setEncodedImage","decodeType","setDecodeType","decodeImageFile","setDecodeImageFile","decodePassword","setDecodePassword","decodingLoading","setDecodingLoading","decodeResponse","setDecodeResponse","decodedMessage","setDecodedMessage","decodedImageUrl","setDecodedImageUrl","pollJobStatus","jobId","interval","setInterval","res","fetch","data","json","status","progress","clearInterval","encoded_image_url","message","err","handleEncode","e","preventDefault","formData","FormData","append","method","body","ok","job_id","handleDecode","decoded_type","decoded_content","decoded_content_url","maxWidth","margin","display","gridTemplateColumns","gap","onSubmit","flexDirection","value","onChange","target","width","placeholder","rows","required","type","accept","files","disabled","cursor","marginTop","src","alt","href","download","wordBreak","_c2","$RefreshReg$"],"sources":["D:/PROJECT CS/unified-stego-system/frontend/src/components/Encode.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\n// Reusable component for styled sections\r\nconst Section = ({ title, children }) => (\r\n  <div style={{ padding: \"1.5rem\", border: \"1px solid #ddd\", borderRadius: \"8px\", boxShadow: \"0 2px 5px rgba(0,0,0,0.05)\", backgroundColor: \"#fff\" }}>\r\n    <h2 style={{ marginBottom: \"1.5rem\", textAlign: \"center\", color: \"#333\", borderBottom: \"2px solid #007bff\", paddingBottom: \"0.5rem\" }}>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nfunction Encode() {\r\n  // Encoding States\r\n  const [inputType, setInputType] = useState('text'); // 'text' or 'image'\r\n  const [text, setText] = useState('');\r\n  const [secretImage, setSecretImage] = useState(null);\r\n  const [coverImage, setCoverImage] = useState(null);\r\n  const [encodePassword, setEncodePassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const [encodeProgress, setEncodeProgress] = useState(0);\r\n  const [response, setResponse] = useState('');\r\n  const [encodedImage, setEncodedImage] = useState(null);\r\n\r\n  // Decoding States\r\n  const [decodeType, setDecodeType] = useState('text'); // 'text' or 'image'\r\n  const [decodeImageFile, setDecodeImageFile] = useState(null);\r\n  const [decodePassword, setDecodePassword] = useState('');\r\n  const [decodingLoading, setDecodingLoading] = useState(false);\r\n  const [decodeResponse, setDecodeResponse] = useState('');\r\n  const [decodedMessage, setDecodedMessage] = useState('');\r\n  const [decodedImageUrl, setDecodedImageUrl] = useState(null);\r\n\r\n  // --- API HANDLERS ---\r\n  const pollJobStatus = (jobId) => {\r\n    const interval = setInterval(async () => {\r\n      try {\r\n        const res = await fetch(`http://localhost:5000/status/${jobId}`);\r\n        const data = await res.json();\r\n        if (data.status === 'processing') {\r\n          setEncodeProgress(data.progress);\r\n        } else if (data.status === 'complete') {\r\n          clearInterval(interval);\r\n          setLoading(false);\r\n          setResponse('Encoding successful!');\r\n          setEncodeProgress(100);\r\n          setEncodedImage(data.encoded_image_url);\r\n        } else if (data.status === 'error') {\r\n          clearInterval(interval);\r\n          setLoading(false);\r\n          setResponse(`Error: ${data.message}`);\r\n        }\r\n      } catch (err) {\r\n        clearInterval(interval);\r\n        setLoading(false);\r\n        setResponse('Error: Could not poll job status.');\r\n      }\r\n    }, 2000);\r\n  };\r\n\r\n  const handleEncode = async (e) => {\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    setResponse('Starting encoding process...');\r\n    setEncodedImage(null);\r\n    setEncodeProgress(0);\r\n\r\n    const formData = new FormData();\r\n    formData.append('inputType', inputType);\r\n    formData.append('coverImage', coverImage);\r\n    if (encodePassword) formData.append('password', encodePassword);\r\n\r\n    if (inputType === 'text') {\r\n      formData.append('text', text);\r\n    } else {\r\n      formData.append('secretImage', secretImage);\r\n    }\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/encode', { method: 'POST', body: formData });\r\n      const data = await res.json();\r\n      if (res.ok && data.job_id) {\r\n        setResponse('Processing... Please wait.');\r\n        pollJobStatus(data.job_id);\r\n      } else {\r\n        setResponse(`Error: ${data.message || 'Failed to start encoding.'}`);\r\n        setLoading(false);\r\n      }\r\n    } catch (err) {\r\n      setResponse('Error: Could not connect to the server.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleDecode = async (e) => {\r\n    e.preventDefault();\r\n    setDecodingLoading(true);\r\n    setDecodeResponse('Decoding in progress...');\r\n    setDecodedMessage('');\r\n    setDecodedImageUrl(null);\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', decodeImageFile);\r\n    formData.append('decodeType', decodeType); // Specify what to extract\r\n    if (decodePassword) formData.append('password', decodePassword);\r\n\r\n    try {\r\n      const res = await fetch('http://localhost:5000/decode', { method: 'POST', body: formData });\r\n      const data = await res.json();\r\n      setDecodeResponse(data.message);\r\n      if (res.ok) {\r\n        if (data.decoded_type === 'text') setDecodedMessage(data.decoded_content);\r\n        if (data.decoded_type === 'image') setDecodedImageUrl(data.decoded_content_url);\r\n      }\r\n    } catch (err) {\r\n      setDecodeResponse('Error: Could not connect to the server.');\r\n    } finally {\r\n      setDecodingLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ maxWidth: \"800px\", margin: \"auto\", padding: \"1rem\", display: \"grid\", gridTemplateColumns: \"1fr\", gap: \"2rem\" }}>\r\n      {/* --- ENCODING SECTION --- */}\r\n      <Section title=\"Encode Data\">\r\n        <form onSubmit={handleEncode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          <label>1. Select Input Type:</label>\r\n          <select value={inputType} onChange={(e) => setInputType(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\" }}>\r\n            <option value=\"text\">Text in Image</option>\r\n            <option value=\"image\">Image in Image</option>\r\n          </select>\r\n\r\n          {inputType === 'text' ? (\r\n            <textarea value={text} onChange={(e) => setText(e.target.value)} placeholder=\"Enter your secret message...\" rows={4} required style={{ width: \"100%\", padding: \"0.5rem\" }} />\r\n          ) : (\r\n            <label>Upload Secret Image: <input type=\"file\" accept=\"image/*\" onChange={(e) => setSecretImage(e.target.files[0])} required style={{ width: \"100%\" }} /></label>\r\n          )}\r\n\r\n          <label>Upload Cover Image: <input type=\"file\" accept=\"image/*\" onChange={(e) => setCoverImage(e.target.files[0])} required style={{ width: \"100%\" }} /></label>\r\n          <label>Encryption Password (Optional): <input type=\"password\" value={encodePassword} onChange={(e) => setEncodePassword(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\" }} /></label>\r\n\r\n          <button type=\"submit\" disabled={loading} style={{ padding: \"0.8rem\", cursor: \"pointer\" }}>{loading ? `Processing... ${encodeProgress}%` : \"Encode\"}</button>\r\n          {response && <p style={{ backgroundColor: \"#f0f0f0\", padding: \"0.5rem\", borderRadius: \"4px\" }}>{response}</p>}\r\n          {encodedImage && (\r\n            <div style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\r\n              <h4>Encoded Image Ready:</h4>\r\n              <img src={encodedImage} alt=\"Encoded\" style={{ maxWidth: \"100%\", borderRadius: \"8px\" }} />\r\n              <a href={encodedImage} download style={{ display: \"block\", marginTop: \"0.5rem\" }}>Download Image</a>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </Section>\r\n\r\n      {/* --- DECODING SECTION --- */}\r\n      <Section title=\"Decode Data\">\r\n        <form onSubmit={handleDecode} style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\r\n          <label>1. Select What to Extract:</label>\r\n          <select value={decodeType} onChange={(e) => setDecodeType(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\" }}>\r\n            <option value=\"text\">Extract Text</option>\r\n            <option value=\"image\">Extract Image</option>\r\n          </select>\r\n\r\n          <label>Upload Stego Image: <input type=\"file\" accept=\"image/*\" onChange={(e) => setDecodeImageFile(e.target.files[0])} required style={{ width: \"100%\" }} /></label>\r\n          <label>Decryption Password (if used): <input type=\"password\" value={decodePassword} onChange={(e) => setDecodePassword(e.target.value)} style={{ width: \"100%\", padding: \"0.5rem\" }} /></label>\r\n\r\n          <button type=\"submit\" disabled={decodingLoading} style={{ padding: \"0.8rem\", cursor: \"pointer\" }}>{decodingLoading ? \"Decoding...\" : \"Decode\"}</button>\r\n          {decodeResponse && <p style={{ backgroundColor: \"#f0f0f0\", padding: \"0.5rem\", borderRadius: \"4px\" }}>{decodeResponse}</p>}\r\n          {decodedMessage && (\r\n            <div style={{ marginTop: \"1rem\" }}>\r\n              <h4>Decoded Text:</h4>\r\n              <p style={{ wordBreak: \"break-all\" }}>{decodedMessage}</p>\r\n            </div>\r\n          )}\r\n          {decodedImageUrl && (\r\n            <div style={{ textAlign: \"center\", marginTop: \"1rem\" }}>\r\n              <h4>Decoded Image:</h4>\r\n              <img src={decodedImageUrl} alt=\"Decoded\" style={{ maxWidth: \"100%\", borderRadius: \"8px\" }} />\r\n              <a href={decodedImageUrl} download style={{ display: \"block\", marginTop: \"0.5rem\" }}>Download Decoded Image</a>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </Section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Encode;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}